{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport shortId from \"shortid\";\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"김떤더\"\n    },\n    content: \"첫 번째 게시글 #해시태그 #익스프레스\",\n    Images: [{\n      id: shortId.generate(),\n      src: \"https://cdn.pixabay.com/photo/2022/07/03/22/00/cat-7300029_960_720.jpg\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://cdn.pixabay.com/photo/2017/02/20/18/03/cat-2083492_960_720.jpg\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://cdn.pixabay.com/photo/2021/11/12/03/04/woman-6787784_960_720.png\"\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"copy\"\n      },\n      content: \"고양이 귀여워요😊\"\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"연두\"\n      },\n      content: \"츄르 사야지\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\n//다른 정보들과 함께 오는 데이터들은 대문자로 시작 - User, Image, Comment\n//변수로 따로 저장해두면 오타를 막을 수 있다.\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\n\n//동적 action creator : 액션을 그때그때 생성해줌\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\nconst dummyPost = data => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: \"김떤더\"\n  },\n  Images: [],\n  Comments: []\n});\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: \"김떤더\"\n  }\n});\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\n        addPostLoading: false,\n        addPostDone: true\n      });\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n    case ADD_COMMENT_SUCCESS:\n      const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n      const post = _objectSpread({}, state.mainPosts[postIndex]);\n      post.Comments = [dummyComment(action.data.content), ...post.Comments];\n      const mainPosts = [...state.mainPosts];\n      mainPosts[postIndex] = post;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts,\n        addCommentLoading: false,\n        addCommentDone: true\n      });\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\nexport default reducer;","map":{"version":3,"names":["shortId","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","error","postIndex","findIndex","v","postId","post"],"sources":["C:/KIMJIHYE/workspace/react-nodebird/prepare/front/reducers/post.js"],"sourcesContent":["import shortId from \"shortid\";\r\n\r\nexport const initialState = {\r\n  mainPosts: [\r\n    {\r\n      id: 1,\r\n      User: {\r\n        id: 1,\r\n        nickname: \"김떤더\",\r\n      },\r\n      content: \"첫 번째 게시글 #해시태그 #익스프레스\",\r\n      Images: [\r\n        {\r\n          id: shortId.generate(),\r\n          src: \"https://cdn.pixabay.com/photo/2022/07/03/22/00/cat-7300029_960_720.jpg\",\r\n        },\r\n        {\r\n          id: shortId.generate(),\r\n          src: \"https://cdn.pixabay.com/photo/2017/02/20/18/03/cat-2083492_960_720.jpg\",\r\n        },\r\n        {\r\n          id: shortId.generate(),\r\n          src: \"https://cdn.pixabay.com/photo/2021/11/12/03/04/woman-6787784_960_720.png\",\r\n        },\r\n      ],\r\n      Comments: [\r\n        {\r\n          id: shortId.generate(),\r\n          User: {\r\n            id: shortId.generate(),\r\n            nickname: \"copy\",\r\n          },\r\n          content: \"고양이 귀여워요😊\",\r\n        },\r\n        {\r\n          id: shortId.generate(),\r\n          User: {\r\n            id: shortId.generate(),\r\n            nickname: \"연두\",\r\n          },\r\n          content: \"츄르 사야지\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  imagePaths: [],\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n//다른 정보들과 함께 오는 데이터들은 대문자로 시작 - User, Image, Comment\r\n//변수로 따로 저장해두면 오타를 막을 수 있다.\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\n//동적 action creator : 액션을 그때그때 생성해줌\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst dummyPost = (data) => ({\r\n  id: data.id,\r\n  content: data.content,\r\n  User: {\r\n    id: 1,\r\n    nickname: \"김떤더\",\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data.content,\r\n  User: {\r\n    id: 1,\r\n    nickname: \"김떤더\",\r\n  },\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        addPostLoading: true,\r\n        addPostDone: false,\r\n        addPostError: null,\r\n      };\r\n    case ADD_POST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\r\n        addPostLoading: false,\r\n        addPostDone: true,\r\n      };\r\n    case ADD_POST_FAILURE:\r\n      return {\r\n        ...state,\r\n        addPostLoading: false,\r\n        addPostError: action.error,\r\n      };\r\n    case ADD_COMMENT_REQUEST:\r\n      return {\r\n        ...state,\r\n        addCommentLoading: true,\r\n        addCommentDone: false,\r\n        addCommentError: null,\r\n      };\r\n    case ADD_COMMENT_SUCCESS:\r\n      const postIndex = state.mainPosts.findIndex(\r\n        (v) => v.id === action.data.postId\r\n      );\r\n      const post = { ...state.mainPosts[postIndex] };\r\n      post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n      const mainPosts = [...state.mainPosts];\r\n      mainPosts[postIndex] = post;\r\n\r\n      return {\r\n        ...state,\r\n        mainPosts,\r\n        addCommentLoading: false,\r\n        addCommentDone: true,\r\n      };\r\n    case ADD_COMMENT_FAILURE:\r\n      return {\r\n        ...state,\r\n        addCommentLoading: false,\r\n        addCommentError: action.error,\r\n      };\r\n    default: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}