{"ast":null,"code":"import { all, fork, takeLatest, put, delay } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from \"../reducers/post\";\nfunction addPostAPI(data) {\n  return axios.post(\"/api/addPost\", data);\n}\nfunction* addPost(action) {\n  try {\n    yield delay(1000);\n    //const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["all","fork","takeLatest","put","delay","axios","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostAPI","data","post","addPost","action","type","result","err","response","watchAddPost","watchAddComment","addComment","postSaga"],"sources":["D:/Document/react/react-nodebird/prepare/front/sagas/post.js"],"sourcesContent":["import { all, fork, takeLatest, put, delay } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\nimport {\r\n  ADD_POST_REQUEST,\r\n  ADD_POST_SUCCESS,\r\n  ADD_POST_FAILURE,\r\n  ADD_COMMENT_REQUEST,\r\n  ADD_COMMENT_SUCCESS,\r\n  ADD_COMMENT_FAILURE,\r\n} from \"../reducers/post\";\r\n\r\nfunction addPostAPI(data) {\r\n  return axios.post(\"/api/addPost\", data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    yield delay(1000);\r\n    //const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: ADD_POST_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: ADD_POST_FAILURE,\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\nexport default function* postSaga() {\r\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\r\n}\r\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,IAAI,EAAEC,UAAU,EAAEC,GAAG,EAAEC,KAAK,QAAQ,oBAAoB;AACtE,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,gBAAgB,EAChBC,gBAAgB,EAChBC,gBAAgB,EAChBC,mBAAmB,EACnBC,mBAAmB,EACnBC,mBAAmB,QACd,kBAAkB;AAEzB,SAASC,UAAU,CAACC,IAAI,EAAE;EACxB,OAAOR,KAAK,CAACS,IAAI,CAAC,cAAc,EAAED,IAAI,CAAC;AACzC;AAEA,UAAUE,OAAO,CAACC,MAAM,EAAE;EACxB,IAAI;IACF,MAAMZ,KAAK,CAAC,IAAI,CAAC;IACjB;IACA,MAAMD,GAAG,CAAC;MACRc,IAAI,EAAEV,gBAAgB;MACtBM,IAAI,EAAEK,MAAM,CAACL;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZ,MAAMhB,GAAG,CAAC;MACRc,IAAI,EAAET,gBAAgB;MACtBK,IAAI,EAAEM,GAAG,CAACC,QAAQ,CAACP;IACrB,CAAC,CAAC;EACJ;AACF;AAEA,UAAUQ,YAAY,GAAG;EACvB,MAAMnB,UAAU,CAACI,gBAAgB,EAAES,OAAO,CAAC;AAC7C;AAEA,UAAUO,eAAe,GAAG;EAC1B,MAAMpB,UAAU,CAACO,mBAAmB,EAAEc,UAAU,CAAC;AACnD;AAEA,eAAe,UAAUC,QAAQ,GAAG;EAClC,MAAMxB,GAAG,CAAC,CAACC,IAAI,CAACoB,YAAY,CAAC,EAAEpB,IAAI,CAACqB,eAAe,CAAC,CAAC,CAAC;AACxD"},"metadata":{},"sourceType":"module"}