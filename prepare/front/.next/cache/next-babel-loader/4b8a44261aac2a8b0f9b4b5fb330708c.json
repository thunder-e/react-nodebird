{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"D:\\\\Document\\\\react\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\PostCard.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Popover, Button, Avatar } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined } from \"@ant-design/icons\";\nimport PostImages from \"./PostImages\";\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  var _useState = useState(false),\n    liked = _useState[0],\n    setLiked = _useState[1];\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  // me?.id => optional chaining 연산자 : me.id있으면 id로 없으면 undefined로\n\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.Images && post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 44\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }), __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n};\n_s(PostCard, \"KxUnbZvgKLcKpSYBzmqnEICeEZ8=\", false, function () {\n  return [useSelector];\n});\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.any),\n    Images: PropTypes.arrayOf(PropTypes.any)\n  })\n};\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useState","PropTypes","Card","Popover","Button","Avatar","useSelector","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","PostImages","PostCard","post","liked","setLiked","id","state","user","me","marginBottom","Images","User","nickname","content","propTypes","shape","number","object","string","createdAt","Comments","arrayOf","any"],"sources":["D:/Document/react/react-nodebird/prepare/front/components/PostCard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, Popover, Button, Avatar } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  EllipsisOutlined,\r\n  HeartOutlined,\r\n  MessageOutlined,\r\n  RetweetOutlined,\r\n} from \"@ant-design/icons\";\r\nimport PostImages from \"./PostImages\";\r\n\r\nconst PostCard = ({ post }) => {\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  // me?.id => optional chaining 연산자 : me.id있으면 id로 없으면 undefined로\r\n\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <Card\r\n        cover={\r\n          post.Images && post.Images[0] && <PostImages images={post.Images} />\r\n        }\r\n        actions={[\r\n          <RetweetOutlined key=\"retweet\" />,\r\n          <HeartOutlined key=\"heart\" />,\r\n          <MessageOutlined key=\"comment\" />,\r\n          <Popover\r\n            key=\"more\"\r\n            content={\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>수정</Button>\r\n                    <Button type=\"danger\">삭제</Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>신고</Button>\r\n                )}\r\n              </Button.Group>\r\n            }\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={post.content}\r\n        />\r\n      </Card>\r\n      {/* <CommentForm />\r\n      <Comments /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createdAt: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.any),\r\n    Images: PropTypes.arrayOf(PropTypes.any),\r\n  }),\r\n};\r\n\r\nexport default PostCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}