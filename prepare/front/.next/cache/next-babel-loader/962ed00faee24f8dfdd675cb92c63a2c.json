{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"D:\\\\Document\\\\react\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\CommentForm.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useCallback } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Button, Form, Input } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport useInput from \"../hooks/useInput\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var _useInput = useInput(\"\"),\n    _useInput2 = _slicedToArray(_useInput, 2),\n    commentText = _useInput2[0],\n    onChangeCommentText = _useInput2[1];\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: userId,\n        id: id\n      }\n    });\n  }, [commentText]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: \"relative\",\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    style: {\n      position: \"absolute\",\n      right: 0,\n      bottom: -40\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n_s(CommentForm, \"PptqMkMnW7reCXQEE7qotaIWwp0=\", false, function () {\n  return [useSelector, useInput];\n});\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useCallback","useSelector","Button","Form","Input","PropTypes","useInput","ADD_COMMENT_REQUEST","CommentForm","post","id","state","user","me","commentText","onChangeCommentText","onSubmitComment","console","log","dispatch","type","data","content","postId","userId","position","margin","right","bottom","propTypes","object","isRequired"],"sources":["D:/Document/react/react-nodebird/prepare/front/components/CommentForm.js"],"sourcesContent":["import React, { useCallback } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport useInput from \"../hooks/useInput\";\r\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\r\n\r\nconst CommentForm = ({ post }) => {\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  const [commentText, onChangeCommentText] = useInput(\"\");\r\n  const onSubmitComment = useCallback(() => {\r\n    console.log(post.id, commentText);\r\n    dispatch({\r\n      type: ADD_COMMENT_REQUEST,\r\n      data: { content: commentText, postId: post.id, userId, id },\r\n    });\r\n  }, [commentText]);\r\n\r\n  return (\r\n    <Form onFinish={onSubmitComment}>\r\n      <Form.Item style={{ position: \"relative\", margin: 0 }}>\r\n        <Input.TextArea\r\n          value={commentText}\r\n          onChange={onChangeCommentText}\r\n          rows={4}\r\n        />\r\n        <Button\r\n          style={{ position: \"absolute\", right: 0, bottom: -40 }}\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n        >\r\n          삐약\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CommentForm;\r\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAC1C,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,mBAAmB,QAAQ,kBAAkB;AAEtD,IAAMC,WAAW,GAAG,SAAdA,WAAW,OAAiB;EAAA;EAAA,IAAXC,IAAI,QAAJA,IAAI;EACzB,IAAMC,EAAE,GAAGT,WAAW,CAAC,UAACU,KAAK;IAAA;IAAA,yBAAKA,KAAK,CAACC,IAAI,CAACC,EAAE,mDAAb,eAAeH,EAAE;EAAA,EAAC;EACpD,gBAA2CJ,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAhDQ,WAAW;IAAEC,mBAAmB;EACvC,IAAMC,eAAe,GAAGhB,WAAW,CAAC,YAAM;IACxCiB,OAAO,CAACC,GAAG,CAACT,IAAI,CAACC,EAAE,EAAEI,WAAW,CAAC;IACjCK,QAAQ,CAAC;MACPC,IAAI,EAAEb,mBAAmB;MACzBc,IAAI,EAAE;QAAEC,OAAO,EAAER,WAAW;QAAES,MAAM,EAAEd,IAAI,CAACC,EAAE;QAAEc,MAAM,EAANA,MAAM;QAAEd,EAAE,EAAFA;MAAG;IAC5D,CAAC,CAAC;EACJ,CAAC,EAAE,CAACI,WAAW,CAAC,CAAC;EAEjB,OACE,MAAC,IAAI;IAAC,QAAQ,EAAEE,eAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC9B,MAAC,IAAI,CAAC,IAAI;IAAC,KAAK,EAAE;MAAES,QAAQ,EAAE,UAAU;MAAEC,MAAM,EAAE;IAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACpD,MAAC,KAAK,CAAC,QAAQ;IACb,KAAK,EAAEZ,WAAY;IACnB,QAAQ,EAAEC,mBAAoB;IAC9B,IAAI,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACR,EACF,MAAC,MAAM;IACL,KAAK,EAAE;MAAEU,QAAQ,EAAE,UAAU;MAAEE,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC;IAAG,CAAE;IACvD,IAAI,EAAC,SAAS;IACd,QAAQ,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAGV,CACC,CACP;AAEX,CAAC;AAAC,GA7BIpB,WAAW;EAAA,QACJP,WAAW,EACqBK,QAAQ;AAAA;AAAA,KAF/CE,WAAW;AA+BjBA,WAAW,CAACqB,SAAS,GAAG;EACtBpB,IAAI,EAAEJ,SAAS,CAACyB,MAAM,CAACC;AACzB,CAAC;AAED,eAAevB,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}