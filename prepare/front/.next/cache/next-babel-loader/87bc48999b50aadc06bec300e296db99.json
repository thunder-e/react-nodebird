{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { HYDRATE } from \"next-redux-wrapper\";\nconst initialState = {\n  user: {},\n  post: {}\n};\n\n//async action creator\n\n//action creator\nconst changeName = data => {\n  return {\n    type: \"CHANGE_NAME\",\n    data\n  };\n};\nchangeName(\"thun\");\n// {\n//     type: \"CHANGE_NAME\",\n//     data: 'thun'\n// }\n\n//(이전상태, 액션) => 다음상태\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"HYDRATE\":\n      console.log(\"HYDRATE\", action);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","initialState","user","post","changeName","data","type","rootReducer","state","action","console","log","payload"],"sources":["D:/Document/react/react-nodebird/prepare/front/reducers/index.js"],"sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  post: {},\r\n};\r\n\r\n//async action creator\r\n\r\n//action creator\r\nconst changeName = (data) => {\r\n  return {\r\n    type: \"CHANGE_NAME\",\r\n    data,\r\n  };\r\n};\r\n\r\nchangeName(\"thun\");\r\n// {\r\n//     type: \"CHANGE_NAME\",\r\n//     data: 'thun'\r\n// }\r\n\r\n//(이전상태, 액션) => 다음상태\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"HYDRATE\":\r\n      console.log(\"HYDRATE\", action);\r\n      return { ...state, ...action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default rootReducer;\r\n"],"mappings":";;;AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAE5C,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,CAAC,CAAC;EACRC,IAAI,EAAE,CAAC;AACT,CAAC;;AAED;;AAEA;AACA,MAAMC,UAAU,GAAIC,IAAI,IAAK;EAC3B,OAAO;IACLC,IAAI,EAAE,aAAa;IACnBD;EACF,CAAC;AACH,CAAC;AAEDD,UAAU,CAAC,MAAM,CAAC;AAClB;AACA;AACA;AACA;;AAEA;AACA,MAAMG,WAAW,GAAG,CAACC,KAAK,GAAGP,YAAY,EAAEQ,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACH,IAAI;IACjB,KAAK,SAAS;MACZI,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,MAAM,CAAC;MAC9B,uCAAYD,KAAK,GAAKC,MAAM,CAACG,OAAO;IAEtC;MACE,OAAOJ,KAAK;EAAC;AAEnB,CAAC;AACD,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}