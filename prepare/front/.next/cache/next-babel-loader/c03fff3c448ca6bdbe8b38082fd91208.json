{"ast":null,"code":"var _jsxFileName = \"D:\\\\Document\\\\react\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addPost } from \"../reducers/post\";\nimport useInput from \"../hooks/useInput\";\nconst PostForm = () => {\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput(\"\");\n  useEffect(() => {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  const onSubmit = useCallback(() => {\n    dispatch(addPost(text));\n    console.log(\"text : \", text);\n  }, [text]);\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(e => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return __jsx(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    enc: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: \"right\"\n    },\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, imagePaths.map(v => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: \"inline-block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: v,\n    style: {\n      width: \"200px\"\n    },\n    alt: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \"\\uC81C\\uAC70\"))))));\n};\nexport default PostForm;","map":{"version":3,"names":["React","useCallback","useEffect","useRef","Button","Form","Input","useSelector","useDispatch","addPost","useInput","PostForm","imagePaths","addPostDone","state","post","dispatch","text","onChangeText","setText","onSubmit","console","log","imageInput","onClickImageUpload","e","current","click","margin","float","map","v","display","width"],"sources":["D:/Document/react/react-nodebird/prepare/front/components/PostForm.js"],"sourcesContent":["import React, { useCallback, useEffect, useRef } from \"react\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addPost } from \"../reducers/post\";\r\nimport useInput from \"../hooks/useInput\";\r\n\r\nconst PostForm = () => {\r\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n  const [text, onChangeText, setText] = useInput(\"\");\r\n\r\n  useEffect(() => {\r\n    if (addPostDone) {\r\n      setText(\"\");\r\n    }\r\n  }, [addPostDone]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch(addPost(text));\r\n    console.log(\"text : \", text);\r\n  }, [text]);\r\n\r\n  const imageInput = useRef();\r\n  const onClickImageUpload = useCallback(\r\n    (e) => {\r\n      imageInput.current.click();\r\n    },\r\n    [imageInput.current]\r\n  );\r\n\r\n  return (\r\n    <Form\r\n      style={{ margin: \"10px 0 20px\" }}\r\n      enc=\"multipart/form-data\"\r\n      onFinish={onSubmit}\r\n    >\r\n      <Input.TextArea\r\n        value={text}\r\n        onChange={onChangeText}\r\n        maxLength={140}\r\n        placeholder=\"어떤 신기한 일이 있었나요?\"\r\n      />\r\n      <div>\r\n        <input type=\"file\" multiple hidden ref={imageInput}></input>\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n        <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\">\r\n          짹짹\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map((v) => (\r\n          <div key={v} style={{ display: \"inline-block\" }}>\r\n            <img src={v} style={{ width: \"200px\" }} alt={v}></img>\r\n            <div>\r\n              <Button>제거</Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC7D,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAC1C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,QAAQ,kBAAkB;AAC1C,OAAOC,QAAQ,MAAM,mBAAmB;AAExC,MAAMC,QAAQ,GAAG,MAAM;EACrB,MAAM;IAAEC,UAAU;IAAEC;EAAY,CAAC,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EACtE,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAM,CAACS,IAAI,EAAEC,YAAY,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElDR,SAAS,CAAC,MAAM;IACd,IAAIW,WAAW,EAAE;MACfM,OAAO,CAAC,EAAE,CAAC;IACb;EACF,CAAC,EAAE,CAACN,WAAW,CAAC,CAAC;EAEjB,MAAMO,QAAQ,GAAGnB,WAAW,CAAC,MAAM;IACjCe,QAAQ,CAACP,OAAO,CAACQ,IAAI,CAAC,CAAC;IACvBI,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEL,IAAI,CAAC;EAC9B,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMM,UAAU,GAAGpB,MAAM,EAAE;EAC3B,MAAMqB,kBAAkB,GAAGvB,WAAW,CACnCwB,CAAC,IAAK;IACLF,UAAU,CAACG,OAAO,CAACC,KAAK,EAAE;EAC5B,CAAC,EACD,CAACJ,UAAU,CAACG,OAAO,CAAC,CACrB;EAED,OACE,MAAC,IAAI;IACH,KAAK,EAAE;MAAEE,MAAM,EAAE;IAAc,CAAE;IACjC,GAAG,EAAC,qBAAqB;IACzB,QAAQ,EAAER,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAEnB,MAAC,KAAK,CAAC,QAAQ;IACb,KAAK,EAAEH,IAAK;IACZ,QAAQ,EAAEC,YAAa;IACvB,SAAS,EAAE,GAAI;IACf,WAAW,EAAC,wEAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC7B,EACF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE;IAAO,IAAI,EAAC,MAAM;IAAC,QAAQ;IAAC,MAAM;IAAC,GAAG,EAAEK,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAS,EAC5D,MAAC,MAAM;IAAC,OAAO,EAAEC,kBAAmB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,2CAAiB,EACrD,MAAC,MAAM;IAAC,IAAI,EAAC,SAAS;IAAC,KAAK,EAAE;MAAEK,KAAK,EAAE;IAAQ,CAAE;IAAC,QAAQ,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAE1D,CACL,EACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGjB,UAAU,CAACkB,GAAG,CAAEC,CAAC,IAChB;IAAK,GAAG,EAAEA,CAAE;IAAC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAe,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC9C;IAAK,GAAG,EAAED,CAAE;IAAC,KAAK,EAAE;MAAEE,KAAK,EAAE;IAAQ,CAAE;IAAC,GAAG,EAAEF,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAO,EACtD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAY,CACf,CAET,CAAC,CACE,CACD;AAEX,CAAC;AAED,eAAepB,QAAQ"},"metadata":{},"sourceType":"module"}