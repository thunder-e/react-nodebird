{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport mitt from \"next/dist/next-server/lib/mitt\";\nexport const initialState = {\n  //시도중이 true이면 로딩창을 띄울 용도\n  logInLoading: false,\n  //로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  //로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  //회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  //닉네임 변경 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\n\n//오타확률을 적게하기 위해 변수로 저장 - 변수는 에디터가 관리해주기 때문에\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport const CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\nexport const CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\nexport const CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: \"김떤더\",\n  id: 1,\n  Post: [],\n  Followings: [],\n  Followers: []\n});\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: true,\n        //세개 다 초기화\n        loginDone: false,\n        logInError: null\n      });\n    case LOG_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        //loading 끄고 done 해주고\n        logInDone: true,\n        me: dummyUser(action.data)\n      });\n    case LOG_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logInLoading: false,\n        //loading 끄고 error 넣어주고\n        logInError: action.error\n      });\n    case LOG_OUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: true,\n        logOutDone: false,\n        logOutError: null\n      });\n    case LOG_OUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutDone: true,\n        me: null\n      });\n    case LOG_OUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        logOutLoading: false,\n        logOutError: action.error\n      });\n    case SIGN_UP_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: true,\n        signUpDone: false,\n        signUpError: null\n      });\n    case SIGN_UP_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false,\n        signUpDone: true,\n        me: null\n      });\n    case SIGN_UP_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        signUpLoading: false,\n        signUpError: action.error\n      });\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["mitt","initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","dummyUser","data","nickname","id","Post","Followings","Followers","loginRequestAction","type","logoutRequestAction","reducer","state","action","loginDone","error"],"sources":["D:/Document/react/react-nodebird/prepare/front/reducers/user.js"],"sourcesContent":["import mitt from \"next/dist/next-server/lib/mitt\";\r\n\r\nexport const initialState = {\r\n  //시도중이 true이면 로딩창을 띄울 용도\r\n  logInLoading: false, //로그인 시도중\r\n  logInDone: false,\r\n  logInError: null,\r\n\r\n  logOutLoading: false, //로그아웃 시도중\r\n  logOutDone: false,\r\n  logOutError: null,\r\n\r\n  signUpLoading: false, //회원가입 시도중\r\n  signUpDone: false,\r\n  signUpError: null,\r\n\r\n  changeNicknameLoading: false, //닉네임 변경 시도중\r\n  changeNicknameDone: false,\r\n  changeNicknameError: null,\r\n\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\n//오타확률을 적게하기 위해 변수로 저장 - 변수는 에디터가 관리해주기 때문에\r\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\r\n\r\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\r\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\r\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\r\n\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\r\nexport const CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\r\nexport const CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\r\n\r\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\r\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\r\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\r\n\r\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\r\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\r\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\r\n\r\nconst dummyUser = (data) => ({\r\n  ...data,\r\n  nickname: \"김떤더\",\r\n  id: 1,\r\n  Post: [],\r\n  Followings: [],\r\n  Followers: [],\r\n});\r\n\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutRequestAction = () => {\r\n  return {\r\n    type: LOG_OUT_REQUEST,\r\n  };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN_REQUEST:\r\n      return {\r\n        ...state,\r\n        logInLoading: true, //세개 다 초기화\r\n        loginDone: false,\r\n        logInError: null,\r\n      };\r\n    case LOG_IN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        logInLoading: false, //loading 끄고 done 해주고\r\n        logInDone: true,\r\n        me: dummyUser(action.data),\r\n      };\r\n    case LOG_IN_FAILURE:\r\n      return {\r\n        ...state,\r\n        logInLoading: false, //loading 끄고 error 넣어주고\r\n        logInError: action.error,\r\n      };\r\n    case LOG_OUT_REQUEST:\r\n      return {\r\n        ...state,\r\n        logOutLoading: true,\r\n        logOutDone: false,\r\n        logOutError: null,\r\n      };\r\n    case LOG_OUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        logOutLoading: false,\r\n        logOutDone: true,\r\n        me: null,\r\n      };\r\n    case LOG_OUT_FAILURE:\r\n      return {\r\n        ...state,\r\n        logOutLoading: false,\r\n        logOutError: action.error,\r\n      };\r\n    case SIGN_UP_REQUEST:\r\n      return {\r\n        ...state,\r\n        signUpLoading: true,\r\n        signUpDone: false,\r\n        signUpError: null,\r\n      };\r\n    case SIGN_UP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        signUpLoading: false,\r\n        signUpDone: true,\r\n        me: null,\r\n      };\r\n    case SIGN_UP_FAILURE:\r\n      return {\r\n        ...state,\r\n        signUpLoading: false,\r\n        signUpError: action.error,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}