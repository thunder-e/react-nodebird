{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport mitt from \"next/dist/next-server/lib/mitt\";\nimport produce from \"immer\";\nexport const initialState = {\n  //시도중이 true이면 로딩창을 띄울 용도\n  logInLoading: false,\n  //로그인 시도중\n  logInDone: false,\n  logInError: null,\n  logOutLoading: false,\n  //로그아웃 시도중\n  logOutDone: false,\n  logOutError: null,\n  signUpLoading: false,\n  //회원가입 시도중\n  signUpDone: false,\n  signUpError: null,\n  changeNicknameLoading: false,\n  //닉네임 변경 시도중\n  changeNicknameDone: false,\n  changeNicknameError: null,\n  me: null,\n  signUpData: {},\n  loginData: {}\n};\n\n//오타확률을 적게하기 위해 변수로 저장 - 변수는 에디터가 관리해주기 때문에\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\nexport const CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\nexport const CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\nexport const CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\nexport const REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\";\nconst dummyUser = data => _objectSpread(_objectSpread({}, data), {}, {\n  nickname: \"김떤더\",\n  id: 1,\n  Posts: [{\n    id: 1\n  }],\n  Followings: [{\n    nickname: \"minhye\"\n  }, {\n    nickname: \"thun-der\"\n  }, {\n    nickname: \"clover\"\n  }],\n  Followers: [{\n    nickname: \"minhye\"\n  }, {\n    nickname: \"thun-der\"\n  }, {\n    nickname: \"clover\"\n  }]\n});\nexport const loginRequestAction = data => {\n  return {\n    type: LOG_IN_REQUEST,\n    data\n  };\n};\nexport const logoutRequestAction = () => {\n  return {\n    type: LOG_OUT_REQUEST\n  };\n};\nconst reducer = (state = initialState, action) => {\n  produce(state, draft => {\n    switch (action.type) {\n      case LOG_IN_REQUEST:\n        draft.logInLoading = true; // REQUEST : 세개 다 초기화\n        draft.logInDone = false;\n        draft.logInError = null;\n        break;\n      case LOG_IN_SUCCESS:\n        draft.logInLoading = false; // SUCCESS : loading 끄고 done 해주고\n        draft.logInDone = true;\n        draft.me = dummyUser(action.data);\n        break;\n      case LOG_IN_FAILURE:\n        draft.logInLoading = false; // FAILURE : loading 끄고 error 넣어주고\n        draft.logInError = action.error;\n        break;\n      case LOG_OUT_REQUEST:\n        draft.logOutLoading = true;\n        draft.logOutDone = false;\n        draft.logOutError = null;\n        break;\n      case LOG_OUT_SUCCESS:\n        draft.logOutLoading = false;\n        draft.logOutDone = true;\n        draft.me = null;\n        break;\n      case LOG_OUT_FAILURE:\n        draft.logOutLoading = false;\n        draft.logOutError = action.error;\n        break;\n      case SIGN_UP_REQUEST:\n        draft.signUpLoading = true;\n        draft.signUpDone = false;\n        draft.signUpError = null;\n        break;\n      case SIGN_UP_SUCCESS:\n        draft.signUpLoading = false;\n        draft.signUpDone = true;\n        break;\n      case SIGN_UP_FAILURE:\n        draft.signUpLoading = false;\n        draft.signUpError = action.error;\n        break;\n      case CHANGE_NICKNAME_REQUEST:\n        draft.changeNicknameLoading = true;\n        draft.changeNicknameDone = false;\n        draft.changeNicknameError = null;\n        break;\n      case CHANGE_NICKNAME_SUCCESS:\n        draft.changeNicknameLoading = false;\n        draft.changeNicknameDone = true;\n        break;\n      case CHANGE_NICKNAME_FAILURE:\n        draft.changeNicknameLoading = fakse;\n        draft.changeNicknameError = action.error;\n        break;\n      case ADD_POST_TO_ME:\n        draft.me.Posts.unshift({\n          id: action.data\n        });\n        break;\n      // return {\n      //   ...state,\n      //   me: {\n      //     ...state.me,\n      //     Posts: [{ id: action.data }, ...state.me.Posts],\n      //   },\n      // };\n      case REMOVE_POST_OF_ME:\n        draft.me.Posts = draft.me.Posts.filter(v => v.id !== action.data);\n        break;\n      // return {\n      //   ...state,\n      //   me: {\n      //     ...state.me,\n      //     Posts: state.me.Posts.filter((v) => v.id !== action.data),\n      //   },\n      // };\n      default:\n        break;\n    }\n  });\n};\nexport default reducer;","map":{"version":3,"names":["mitt","produce","initialState","logInLoading","logInDone","logInError","logOutLoading","logOutDone","logOutError","signUpLoading","signUpDone","signUpError","changeNicknameLoading","changeNicknameDone","changeNicknameError","me","signUpData","loginData","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","CHANGE_NICKNAME_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","dummyUser","data","nickname","id","Posts","Followings","Followers","loginRequestAction","type","logoutRequestAction","reducer","state","action","draft","error","fakse","unshift","filter","v"],"sources":["D:/Document/react/react-nodebird/prepare/front/reducers/user.js"],"sourcesContent":["import mitt from \"next/dist/next-server/lib/mitt\";\r\nimport produce from \"immer\";\r\n\r\nexport const initialState = {\r\n  //시도중이 true이면 로딩창을 띄울 용도\r\n  logInLoading: false, //로그인 시도중\r\n  logInDone: false,\r\n  logInError: null,\r\n\r\n  logOutLoading: false, //로그아웃 시도중\r\n  logOutDone: false,\r\n  logOutError: null,\r\n\r\n  signUpLoading: false, //회원가입 시도중\r\n  signUpDone: false,\r\n  signUpError: null,\r\n\r\n  changeNicknameLoading: false, //닉네임 변경 시도중\r\n  changeNicknameDone: false,\r\n  changeNicknameError: null,\r\n\r\n  me: null,\r\n  signUpData: {},\r\n  loginData: {},\r\n};\r\n\r\n//오타확률을 적게하기 위해 변수로 저장 - 변수는 에디터가 관리해주기 때문에\r\nexport const LOG_IN_REQUEST = \"LOG_IN_REQUEST\";\r\nexport const LOG_IN_SUCCESS = \"LOG_IN_SUCCESS\";\r\nexport const LOG_IN_FAILURE = \"LOG_IN_FAILURE\";\r\n\r\nexport const LOG_OUT_REQUEST = \"LOG_OUT_REQUEST\";\r\nexport const LOG_OUT_SUCCESS = \"LOG_OUT_SUCCESS\";\r\nexport const LOG_OUT_FAILURE = \"LOG_OUT_FAILURE\";\r\n\r\nexport const SIGN_UP_REQUEST = \"SIGN_UP_REQUEST\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAILURE = \"SIGN_UP_FAILURE\";\r\n\r\nexport const CHANGE_NICKNAME_REQUEST = \"CHANGE_NICKNAME_REQUEST\";\r\nexport const CHANGE_NICKNAME_SUCCESS = \"CHANGE_NICKNAME_SUCCESS\";\r\nexport const CHANGE_NICKNAME_FAILURE = \"CHANGE_NICKNAME_FAILURE\";\r\n\r\nexport const FOLLOW_REQUEST = \"FOLLOW_REQUEST\";\r\nexport const FOLLOW_SUCCESS = \"FOLLOW_SUCCESS\";\r\nexport const FOLLOW_FAILURE = \"FOLLOW_FAILURE\";\r\n\r\nexport const UNFOLLOW_REQUEST = \"UNFOLLOW_REQUEST\";\r\nexport const UNFOLLOW_SUCCESS = \"UNFOLLOW_SUCCESS\";\r\nexport const UNFOLLOW_FAILURE = \"UNFOLLOW_FAILURE\";\r\n\r\nexport const ADD_POST_TO_ME = \"ADD_POST_TO_ME\";\r\nexport const REMOVE_POST_OF_ME = \"REMOVE_POST_OF_ME\";\r\n\r\nconst dummyUser = (data) => ({\r\n  ...data,\r\n  nickname: \"김떤더\",\r\n  id: 1,\r\n  Posts: [{ id: 1 }],\r\n  Followings: [\r\n    { nickname: \"minhye\" },\r\n    { nickname: \"thun-der\" },\r\n    { nickname: \"clover\" },\r\n  ],\r\n  Followers: [\r\n    { nickname: \"minhye\" },\r\n    { nickname: \"thun-der\" },\r\n    { nickname: \"clover\" },\r\n  ],\r\n});\r\n\r\nexport const loginRequestAction = (data) => {\r\n  return {\r\n    type: LOG_IN_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const logoutRequestAction = () => {\r\n  return {\r\n    type: LOG_OUT_REQUEST,\r\n  };\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOG_IN_REQUEST:\r\n        draft.logInLoading = true; // REQUEST : 세개 다 초기화\r\n        draft.logInDone = false;\r\n        draft.logInError = null;\r\n        break;\r\n      case LOG_IN_SUCCESS:\r\n        draft.logInLoading = false; // SUCCESS : loading 끄고 done 해주고\r\n        draft.logInDone = true;\r\n        draft.me = dummyUser(action.data);\r\n        break;\r\n      case LOG_IN_FAILURE:\r\n        draft.logInLoading = false; // FAILURE : loading 끄고 error 넣어주고\r\n        draft.logInError = action.error;\r\n        break;\r\n      case LOG_OUT_REQUEST:\r\n        draft.logOutLoading = true;\r\n        draft.logOutDone = false;\r\n        draft.logOutError = null;\r\n        break;\r\n      case LOG_OUT_SUCCESS:\r\n        draft.logOutLoading = false;\r\n        draft.logOutDone = true;\r\n        draft.me = null;\r\n        break;\r\n      case LOG_OUT_FAILURE:\r\n        draft.logOutLoading = false;\r\n        draft.logOutError = action.error;\r\n        break;\r\n      case SIGN_UP_REQUEST:\r\n        draft.signUpLoading = true;\r\n        draft.signUpDone = false;\r\n        draft.signUpError = null;\r\n        break;\r\n      case SIGN_UP_SUCCESS:\r\n        draft.signUpLoading = false;\r\n        draft.signUpDone = true;\r\n        break;\r\n      case SIGN_UP_FAILURE:\r\n        draft.signUpLoading = false;\r\n        draft.signUpError = action.error;\r\n        break;\r\n      case CHANGE_NICKNAME_REQUEST:\r\n        draft.changeNicknameLoading = true;\r\n        draft.changeNicknameDone = false;\r\n        draft.changeNicknameError = null;\r\n        break;\r\n      case CHANGE_NICKNAME_SUCCESS:\r\n        draft.changeNicknameLoading = false;\r\n        draft.changeNicknameDone = true;\r\n        break;\r\n      case CHANGE_NICKNAME_FAILURE:\r\n        draft.changeNicknameLoading = fakse;\r\n        draft.changeNicknameError = action.error;\r\n        break;\r\n      case ADD_POST_TO_ME:\r\n        draft.me.Posts.unshift({ id: action.data });\r\n        break;\r\n      // return {\r\n      //   ...state,\r\n      //   me: {\r\n      //     ...state.me,\r\n      //     Posts: [{ id: action.data }, ...state.me.Posts],\r\n      //   },\r\n      // };\r\n      case REMOVE_POST_OF_ME:\r\n        draft.me.Posts = draft.me.Posts.filter((v) => v.id !== action.data);\r\n        break;\r\n      // return {\r\n      //   ...state,\r\n      //   me: {\r\n      //     ...state.me,\r\n      //     Posts: state.me.Posts.filter((v) => v.id !== action.data),\r\n      //   },\r\n      // };\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}