{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"D:\\\\Document\\\\react\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\PostCard.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Popover, Button, Avatar } from \"antd\";\nimport { useSelector } from \"react-redux\";\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined } from \"@ant-design/icons\";\nimport ButtonGroup from \"antd/lib/button/button-group\";\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  var _useSelector = useSelector(function (state) {\n      var _state$user$me;\n      return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n    }),\n    id = _useSelector.id;\n  // me?.id => optional chaining 연산자 : me.id있으면 id로 없으면 undefined로\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: post.images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 34\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: retweet,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }), __jsx(HeartOutlined, {\n      key: heart,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }), __jsx(MessageOutlined, {\n      key: comment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: more,\n      content: __jsx(ButtonGroup, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), __jsx(CommentForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), __jsx(Comments, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n};\n_s(PostCard, \"cU5nkyctemZZKEci2xR5hEayVcQ=\", false, function () {\n  return [useSelector];\n});\n_c = PostCard;\nPostCard.PropTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Image: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","PropTypes","Card","Popover","Button","Avatar","useSelector","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","ButtonGroup","PostCard","post","state","user","me","id","images","Images","retweet","heart","comment","more","User","nickname","content","shape","number","object","string","createdAt","Comments","arrayOf","Image","isRequired"],"sources":["D:/Document/react/react-nodebird/prepare/front/components/PostCard.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, Popover, Button, Avatar } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  EllipsisOutlined,\r\n  HeartOutlined,\r\n  MessageOutlined,\r\n  RetweetOutlined,\r\n} from \"@ant-design/icons\";\r\nimport ButtonGroup from \"antd/lib/button/button-group\";\r\n\r\nconst PostCard = ({ post }) => {\r\n  const { id } = useSelector((state) => state.user.me?.id);\r\n  // me?.id => optional chaining 연산자 : me.id있으면 id로 없으면 undefined로\r\n\r\n  return (\r\n    <div>\r\n      <Card\r\n        cover={post.images[0] && <PostImages images={post.Images} />}\r\n        actions={[\r\n          <RetweetOutlined key={retweet} />,\r\n          <HeartOutlined key={heart} />,\r\n          <MessageOutlined key={comment} />,\r\n          <Popover\r\n            key={more}\r\n            content={\r\n              <ButtonGroup>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button>수정</Button>\r\n                    <Button type=\"danger\">삭제</Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>신고</Button>\r\n                )}\r\n              </ButtonGroup>\r\n            }\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={post.content}\r\n        />\r\n      </Card>\r\n      <CommentForm />\r\n      <Comments />\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.PropTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createdAt: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Image: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}